name: Manage release and packaging

on: [push]

jobs:
  release:
    runs-on: ubuntu-latest
    if: "contains(github.event.head_commit.message, '[release]') && !contains(github.event.head_commit.message, '[nightly]')"

    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Extract Maven project version
      run: echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
      id: project

    - name: Show extracted Maven project version
      run: echo ${{ steps.project.outputs.version }}

    - name: Create a GitHub release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ steps.project.outputs.version }}-release
        prerelease: false
        draft: false
        body: New release!
        New release: ${{ steps.project.outputs.version }}

    - name: Upload release asset to GitHub
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./target/distributed_chat_system-${{ steps.project.outputs.version }}.jar
        asset_name: release.jar
        asset_content_type: application/jar


  nightly:
    runs-on: ubuntu-latest
    if: "contains(github.event.head_commit.message, '[nightly]')"

    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Extract Maven project version
      run: echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
      id: project

    - name: Show extracted Maven project version
      run: echo ${{ steps.project.outputs.version }}

    - name: Create a GitHub release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ steps.project.outputs.version }}-nightly
        prerelease: true
        draft: false
        body: New release!
        New release: ${{ steps.project.outputs.version }}

    - name: Upload release asset to GitHub
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./target/distributed_chat_system-${{ steps.project.outputs.version }}.jar
        asset_name: nightly.jar
        asset_content_type: application/jar


  build:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[release]') && !contains(github.event.head_commit.message, '[nightly]')"

    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven

    - name: Build with Maven
      run: mvn -B package --file pom.xml



